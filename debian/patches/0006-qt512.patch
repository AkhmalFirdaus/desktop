diff --git a/shell_integration/dolphin/CMakeLists.txt b/shell_integration/dolphin/CMakeLists.txt
index 60a38e389..f2fda6e1d 100644
--- a/shell_integration/dolphin/CMakeLists.txt
+++ b/shell_integration/dolphin/CMakeLists.txt
@@ -2,7 +2,7 @@ project(dolphin-owncloud)

 cmake_minimum_required(VERSION 2.8.12)

-set(QT_MIN_VERSION "5.15.0")
+set(QT_MIN_VERSION "5.12.0")
 set(KF5_MIN_VERSION "5.16.0")
 set(KDE_INSTALL_USE_QT_SYS_PATHS ON CACHE BOOL "Install the plugin in the right directory")

diff --git a/shell_integration/libcloudproviders/CMakeLists.txt b/shell_integration/libcloudproviders/CMakeLists.txt
index d5391a7a4..1dd464d25 100644
--- a/shell_integration/libcloudproviders/CMakeLists.txt
+++ b/shell_integration/libcloudproviders/CMakeLists.txt
@@ -41,7 +41,7 @@ macro(libcloudproviders_add_config _sources)
 endmacro(libcloudproviders_add_config _sources)


-find_package(Qt5 5.15 COMPONENTS DBus)
+find_package(Qt5 5.12 COMPONENTS DBus)
 IF (Qt5DBus_FOUND)
     STRING(TOLOWER "${APPLICATION_VENDOR}" DBUS_VENDOR)
     STRING(REGEX REPLACE "[^A-z0-9]" "" DBUS_VENDOR "${DBUS_VENDOR}")
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 9cd372905..1a6e5daec 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -4,8 +4,8 @@ endif()

 include(ECMEnableSanitizers)

-find_package(Qt5 5.15 COMPONENTS Core Network Xml Concurrent REQUIRED)
-find_package(Qt5 5.15 COMPONENTS WebEngineWidgets WebEngine)
+find_package(Qt5 5.12 COMPONENTS Core Network Xml Concurrent REQUIRED)
+find_package(Qt5 5.12 COMPONENTS WebEngineWidgets WebEngine)

 if(Qt5WebEngine_FOUND AND Qt5WebEngineWidgets_FOUND)
   add_compile_definitions(WITH_WEBENGINE=1)
--- a/src/common/syncjournaldb.cpp
+++ b/src/common/syncjournaldb.cpp
@@ -93,6 +93,7 @@ static QByteArray defaultJournalMode(const QString &dbPath)
 SyncJournalDb::SyncJournalDb(const QString &dbFilePath, QObject *parent)
     : QObject(parent)
     , _dbFile(dbFilePath)
+    , _mutex(QMutex::Recursive)
     , _transaction(0)
     , _metadataTableIsEmpty(false)
 {
diff --git a/src/common/syncjournaldb.h b/src/common/syncjournaldb.h
index ba4c0ede8..8436d4775 100644
--- a/src/common/syncjournaldb.h
+++ b/src/common/syncjournaldb.h
@@ -393,8 +393,8 @@ private:

     SqlDatabase _db;
     QString _dbFile;
-    QRecursiveMutex _mutex; // Public functions are protected with the mutex.
+    QMutex _mutex; // Public functions are protected with the mutex.
     QMap<QByteArray, int> _checksymTypeCache;
     int _transaction;
     bool _metadataTableIsEmpty;

--- a/src/common/utility_unix.cpp
+++ b/src/common/utility_unix.cpp
@@ -90,7 +90,7 @@ void setLaunchOnStartup_private(const QString &appName, const QString &guiName,
            << QLatin1String("Type=") << QLatin1String("Application\n")
            << QLatin1String("StartupNotify=") << "false\n"
            << QLatin1String("X-GNOME-Autostart-enabled=") << "true\n"
-           << QLatin1String("X-GNOME-Autostart-Delay=10") << Qt::endl;
+           << QLatin1String("X-GNOME-Autostart-Delay=10") << endl;
     } else {
         if (!QFile::remove(desktopFileLocation)) {
             qCWarning(lcUtility) << "Could not remove autostart desktop file";
diff --git a/src/libsync/logger.cpp b/src/libsync/logger.cpp
index 8aa0360c2..571f17ac4 100644
--- a/src/libsync/logger.cpp
+++ b/src/libsync/logger.cpp
@@ -92,7 +92,7 @@ void Logger::doLog(QtMsgType type, const QMessageLogContext &ctx, const QString
         _crashLogIndex = (_crashLogIndex + 1) % CrashLogSize;
         _crashLog[_crashLogIndex] = msg;
         if (_logstream) {
-            (*_logstream) << msg << Qt::endl;
+            (*_logstream) << msg << endl;
             if (_doFileFlush)
                 _logstream->flush();
         }
diff --git a/src/libsync/theme.cpp b/src/libsync/theme.cpp
index c4e6e83b7..e443e454a 100644
--- a/src/libsync/theme.cpp
+++ b/src/libsync/theme.cpp
@@ -705,17 +705,17 @@ QString Theme::versionSwitchOutput() const
     QTextStream stream(&helpText);
     stream << appName()
            << QLatin1String(" version ")
-           << version() << Qt::endl;
+           << version() << endl;
 #ifdef GIT_SHA1
-    stream << "Git revision " << GIT_SHA1 << Qt::endl;
+    stream << "Git revision " << GIT_SHA1 << endl;
 #endif
-    stream << "Using Qt " << qVersion() << ", built against Qt " << QT_VERSION_STR << Qt::endl;
+    stream << "Using Qt " << qVersion() << ", built against Qt " << QT_VERSION_STR << endl;

     if(!QGuiApplication::platformName().isEmpty())
-        stream << "Using Qt platform plugin '" << QGuiApplication::platformName() << "'" << Qt::endl;
+        stream << "Using Qt platform plugin '" << QGuiApplication::platformName() << "'" << endl;

-    stream << "Using '" << QSslSocket::sslLibraryVersionString() << "'" << Qt::endl;
-    stream << "Running on " << Utility::platformName() << ", " << QSysInfo::currentCpuArchitecture() << Qt::endl;
+    stream << "Using '" << QSslSocket::sslLibraryVersionString() << "'" << endl;
+    stream << "Running on " << Utility::platformName() << ", " << QSysInfo::currentCpuArchitecture() << endl;
     return helpText;
 }
 
